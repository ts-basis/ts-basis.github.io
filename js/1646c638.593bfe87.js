"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4378],{431:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(4848),r=t(8453);const o={title:"Handling Authentication",sidebar_position:3},s="Handling Authentication",a={id:"http-shim/handling-auth",title:"Handling Authentication",description:"HttpServerShim provides two major way of handling authentication and roles:",source:"@site/docs/04_http-shim/handling-auth.mdx",sourceDirName:"04_http-shim",slug:"/http-shim/handling-auth",permalink:"/docs/http-shim/handling-auth",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Handling Authentication",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"HTTP Decorators",permalink:"/docs/http-shim/decorator-list"},next:{title:"Predefined Roles",permalink:"/docs/http-shim/predefined-roles"}},d={},c=[{value:"Defining Authentication Handlers",id:"defining-authentication-handlers",level:2},{value:"Using <code>ReturnCodeFamily</code> for Enumerated Returns",id:"using-returncodefamily-for-enumerated-returns",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"handling-authentication",children:"Handling Authentication"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"HttpServerShim"})," provides two major way of handling authentication and roles:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Authorization"})," header with Bearer token"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"server-session"})," cookie with token definition"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"defining-authentication-handlers",children:"Defining Authentication Handlers"}),"\n",(0,i.jsxs)(n.p,{children:["Both bearer token and server session feed into ",(0,i.jsx)(n.code,{children:"customHandler"})," function under\n",(0,i.jsx)(n.code,{children:"server.config.security.token"})," config. You can define the authentication behavior\nbased on the authentication token given and assign corresponding roles to the\ncurrent access level."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Result, ok, errorResult } from 'ts-basis/nodejs'\n\nserver.config.security.token.customHandler = async (\n    op: HttpOp,\n    token: string,\n): Promise<Result<boolean>> => {\n    if (token !== 'my_token') {\n      return errorResult(new Error(`Unauthorized`))  \n    }\n    // e.g. if JWT token, async verify here ...\n    return ok(true)\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"using-returncodefamily-for-enumerated-returns",children:["Using ",(0,i.jsx)(n.code,{children:"ReturnCodeFamily"})," for Enumerated Returns"]}),"\n",(0,i.jsxs)(n.p,{children:["Inline ",(0,i.jsx)(n.code,{children:"errorResult"})," with custom Error object can also be replaced with your\ncustom ",(0,i.jsx)(n.code,{children:"ReturnCodeFamily"})," if you want to enable full enumerated returns."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Result, ok, errorResult, ReturnCodeFamily } from 'ts-basis/nodejs'\n\nenum AuthenticationTokenCodeEnum {\n    TOKEN_NOT_RECOGNIZED,\n}\nexport const AuthenticationTokenCode =\n    ReturnCodeFamily('AuthenticationTokenCode', AuthenticationTokenCodeEnum)\n\nserver.config.security.token.customHandler = async (\n    op: HttpOp,\n    token: string,\n): Promise<Result<boolean>> => {\n    if (token !== 'my_token') {\n      return AuthenticationTokenCode.error('TOKEN_NOT_RECOGNIZED')\n    }\n    // e.g. if JWT token, async verify here ...\n    return ok(true)\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);