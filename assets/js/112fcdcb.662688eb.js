"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3247],{5635:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=s(4848),t=s(8453);const r={sidebar_position:2},l="TypeTools Interface",o={id:"typetools/typetools-iface",title:"TypeTools Interface",description:"Table of Contents",source:"@site/docs/05_typetools/typetools-iface.mdx",sourceDirName:"05_typetools",slug:"/typetools/typetools-iface",permalink:"/docs/typetools/typetools-iface",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"General Structure",permalink:"/docs/typetools/typetools"},next:{title:"Default Extensions",permalink:"/docs/category/default-extensions"}},a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Classes &amp; Interfaces",id:"classes--interfaces",level:2},{value:"Type Extensions",id:"type-extensions",level:2},{value:"TypeToolsBase",id:"typetoolsbase",level:3},{value:"Model Definition Helpers",id:"model-definition-helpers",level:2},{value:"ModelList",id:"modellist",level:3},{value:"ModelDict",id:"modeldict",level:3},{value:"Proxy Handlers",id:"proxy-handlers",level:2},{value:"Utility Functions",id:"utility-functions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"typetools-interface",children:"TypeTools Interface"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#classes",children:"Classes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#typetoolsbase",children:"TypeToolsBase"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#functions",children:"Functions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#proxy-handlers",children:"Proxy Handlers"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#utility-functions",children:"Utility Functions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#type-extensions",children:"Type Extensions"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#context-and-settings",children:"Context and Settings"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TypeToolsBase"})," bas class serves as a utility for managing type extensions, validation, and manipulation within a TypeScript project. It facilitates:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Type checking and validation"}),"\n",(0,i.jsx)(n.li,{children:"Extension management for types"}),"\n",(0,i.jsx)(n.li,{children:"Proxy-based handling for dynamic collections like lists and dictionaries"}),"\n",(0,i.jsx)(n.li,{children:"Serialization and deserialization of data addresses"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"classes--interfaces",children:"Classes & Interfaces"}),"\n",(0,i.jsx)(n.h2,{id:"type-extensions",children:"Type Extensions"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TypeToolsExtension"})," interface provides a structure for defining extensions that can add, retrieve, and check data on various types."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface TypeToolsExtension {\n    getExtensionData: (target: any) => TypeToolsExtensionData;\n    implementOn: (target: any) => void;\n    typeCheck: (target: any) => boolean;\n    settings: TypeToolsSettings;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"typetoolsbase",children:"TypeToolsBase"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Acts as the core utility class for type handling and extensions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extension Management"}),": Add, get, and check extensions for types."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Checking"}),": Ensure objects conform to expected type specifications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Skeleton and Sample Instances"}),": Generate template or example instances of types."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export class TypeToolsBase {\n    static topError: Error;\n    static topCancel: Error;\n    // ... more static properties and methods\n    settings: TypeToolsSettings;\n    \n    constructor(settings?: Partial<TypeToolsSettings>) {\n        this.settings = settings ? Object.assign(new TypeToolsSettings(), settings) : TypeToolsSettings;\n    }\n    \n    addExtension(target: any, extension: any) { /* implementation */ }\n    getExtension(target: any) { /* implementation */ }\n    init(target: any) { /* implementation */ }\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"model-definition-helpers",children:"Model Definition Helpers"}),"\n",(0,i.jsx)(n.h3,{id:"modellist",children:"ModelList"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Provides a convenient way to create typed lists."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": ",(0,i.jsx)(n.code,{children:"ModelList(type, init, parent, prop, order)"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export function ModelList<T>(type?: Class<T>, init?: Array<T>, parent?: any, prop?: string, order: number = 1) {\n    if (!init) init = [];\n    return new List(init, parent, prop, type, order);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"modeldict",children:"ModelDict"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Provides a convenient way to create typed dictionaries."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": ",(0,i.jsx)(n.code,{children:"ModelDict(init, parent, prop, rubric)"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export function ModelDict<T>(init?: T, parent?: any, prop?: string, rubric?: { [propName: string]: Class<any> }) {\n    return new Dict(init, parent, prop, rubric) as T;\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"proxy-handlers",children:"Proxy Handlers"}),"\n",(0,i.jsxs)(n.p,{children:["The file utilizes ",(0,i.jsx)(n.strong,{children:"Proxy Handlers"})," to ensure type safety in dynamic data structures like ",(0,i.jsx)(n.code,{children:"List"})," and ",(0,i.jsx)(n.code,{children:"Dict"}),". These handlers manage set and get operations to enforce type conformity and handle validation errors gracefully."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isUndef"}),": Checks if a variable is undefined or null."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isFunction"}),": Determines if a variable is a function."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isArray"}),": Determines if a variable is an array."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isObject"}),": Determines if a variable is an object."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isModelInstance"}),": Checks if an object is a type-checked model instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"isModelCollection"}),": Checks if an object is a type-checked model collection."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);