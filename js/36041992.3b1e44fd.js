"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8351],{9364:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(4848),a=s(8453);const r={sidebar_position:1},i="TS Basis",o={id:"about",title:"TS Basis",description:"TS Basis is a general toolbox library based on Typescript for augmenting the",source:"@site/docs/about.mdx",sourceDirName:".",slug:"/about",permalink:"/docs/about",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Data Models & ORM",permalink:"/docs/category/data-models--orm"}},c={},d=[{value:"Intallation",id:"intallation",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ts-basis",children:"TS Basis"})}),"\n",(0,t.jsxs)(n.p,{children:["TS Basis is a general toolbox library based on Typescript for augmenting the\nstandard library offered by browsers and other JS runtimes like Node.js.\nTS Basis library mainly aims to resolve data modeling and syncing between client and\nserver that is currently missing from the MobX and other React libraries, similar in\nfunction for ",(0,t.jsx)(n.a,{href:"https://lodash.com/",children:"Lodash"})," but heavily accentuating server-side ops and data syncing."]}),"\n",(0,t.jsxs)(n.p,{children:["TS Basis comes from parent project group ",(0,t.jsx)(n.a,{href:"https://mobx.js.org/README.html",children:"MobX"}),". TS Basis is currently at version 5\nand is under beta (active proposals and development scoped from 2022 to 2026 year-end).\nThis will be the case until major version 10 where the interfaces and specification will\nbe locked and ratified by the parent project group."]}),"\n",(0,t.jsx)(n.h2,{id:"intallation",children:"Intallation"}),"\n",(0,t.jsxs)(n.p,{children:["You can add ",(0,t.jsx)(n.code,{children:"ts-basis"})," toolbox to your project by running:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i ts-basis\n\n# or if you're using yarn or pnpm\nyarn add ts-basis\npnpm i ts-basis\n"})}),"\n",(0,t.jsxs)(n.p,{children:["After this, you can import features offered by ",(0,t.jsx)(n.code,{children:"ts-basis"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { dataclass } from 'ts-basis'\n\n@dataclass({ classVersion: semver('1.0.0') })\nclass MyClass {\n    id: string = ''\n    name: string = ''\n    constructor(init?: Partial<MyClass>) {\n        Object.assign(this, init)\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);