"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4944],{7557:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=s(4848),a=s(8453);const o={title:"Class Lineage",sidebar_position:2},l=void 0,i={id:"typetools/utils/class-lineage",title:"Class Lineage",description:"ClassLineage - Inheritance Util",source:"@site/docs/05_typetools/utils/class-lineage.mdx",sourceDirName:"05_typetools/utils",slug:"/typetools/utils/class-lineage",permalink:"/docs/typetools/utils/class-lineage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Class Lineage",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Type Helpers",permalink:"/docs/typetools/utils/type-helper"}},r={},c=[{value:"<code>ClassLineage</code> - Inheritance Util",id:"classlineage---inheritance-util",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"classlineage---inheritance-util",children:[(0,t.jsx)(n.code,{children:"ClassLineage"})," - Inheritance Util"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ClassLineage.of"})," fetches top-down inheritance chain of given class instance or class itself."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { ClassLineage } from 'ts-basis';\n\nclass A {}\nclass B extends A {}\n...\nclass Z extends Y {}\n\nconst a = new A();\nconst b = new B();\n\n// Class itself\nClassLineage.of(A); // [A]\nClassLineage.of(B); // [A, B]\n// Or its class instances\nClassLineage.of(a); // [A]\nClassLineage.of(b); // [A, B]\n\nClassLineage.namesOf(B); // ['A', 'B']\nClassLineage.namesOf(b); // ['A', 'B']\n\n// Parent of\nClassLineage.parentOf(B); // A\nClassLineage.parentNameOf(B); // 'A'\nClassLineage.parentOf(A); // null; A doesn't extend from anything\nClassLineage.parentNameOf(A); // null\n\n// Bottom-up order\nClassLineage.of(Z, false);  // [Z, Y, ..., A]\nClassLineage.namesOf(Z, false);  // ['Z', 'Y', ..., 'A']\n\n// Ancestry\nClassLineage.lastCommonAncestor(A, B); // A\nClassLineage.commonAncestorInfo(A, B); // { commonAncestors: [ A ], lastCommonAncestor: A, senior: A, junior: B, distance: 1, travel: 0, levelCompare: 1, levelDifference: 1 }\nclass Unrelated {}\nClassLineage.commonAncestorInfo(A, Unrelated); // { commonAncestors: [], lastCommonAncestor: null, senior: null, junior: null, distance: Infinity, travel: Infinity, levelCompare: NaN, levelDifference: NaN }\nclass B2 extends A {}\nClassLineage.areRelated(B, B2); // true; common parent A\nClassLineage.areRelated(B, Unrelated); // false; no common ancestor\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Performance: all ",(0,t.jsx)(n.code,{children:"ClassLineage"})," methods are about ",(0,t.jsx)(n.strong,{children:"10M/s"}),"; results are auto-cached since types don't generally change during runtime. To turn it off, set ",(0,t.jsx)(n.code,{children:"ClassLineage.noCache"})," to true."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var t=s(6540);const a={},o=t.createContext(a);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);